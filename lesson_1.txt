1) How did viewing a diff between two versions of a file help you spot the bug?

It was helpful because it clearly showed the areas of differentiating code. 
And easily showed what old code had been changed to new code.
Also because all other code that was the same, was left out to make it more understandable what code had changed.

2) How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It would make me a more efficient programmer because it would allow me to go back to previous versions of a code - either because it was working (if the new version is not) or because it was a better solution. 
It would also show the process of getting the code done - what mistakes where made and what could be improved till next time.

3) What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: the commits will be logical and operating when being run. It will be easy to understand the specific changes, since they do not occur randomly.

Cons: if the user forgets to save, the commits can be really big or some changes could be lost (in case of a crash). 

4) Why do you think some control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Because coding often involves several separate files working together to make a functional product. While documents being written using Google Docs rarely need to be connected with another document. If something is related it would probably be written in the same document. 

5) How can you use the commands git log and git diff to view the history of files?

The git log can be used to view all the different commits made in the history of the files. The git diff can be used to view the difference between two commits in the history of the files.

6) How might using version control make you more confident to make changes that could break something?

Because it makes it easy to go back and check when a bug or breaking of code beings.. Then trying to fix the code from there. It make it possible to continues coding for a long time, find a bug, and not have to delete all of the code that was made after the bug occurred.

7) Now that you have your workspace set up, what do you want to try using Git for?

To learn to program Android apps well.